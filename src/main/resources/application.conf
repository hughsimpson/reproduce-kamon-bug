kamon {
  modules {
//    prometheus-reporter {
//      name = "Prometheus Reporter"
//      description = "Exposes a scrape endpoint for Prometheus"
//      factory: "kamon.prometheus.PrometheusReporter$Factory"
//      enabled = true # We have to spin it up programatically for the /metrics endpoint to work; this 'enabled = false'
//      # just prevents us from spinning up two separate prometheus reporters.
//      #
//      // TODO There's gotta be some way to acquire the automagically registered reporter for the endpoint instead of doing this
//    }
//
//    jaeger: {
//      name = "Jaeger Reporter"
//      description = "Sends Spans to Jaeger over HTTP"
//      factory: "kamon.jaeger.JaegerReporterFactory"
//      enabled = true
//      enabled = ${?TRACING_ENABLED}
//    }
  }

  trace {
    // Strategy for reporting the trace to jaeger. Legal values are `never`, `random` and `always`
    sampler = always
    sampler = ${?TRACING_SAMPLER_TYPE}
    join-remote-parents-with-same-span-id: false
    probability = 0.01
    probability = ${?TRACING_SAMPLE_RATE}
  }


  jaeger {
    host = "localhost"
    host = ${?TRACING_COLLECTOR_HOST}
    port = 14268
    port = ${?TRACING_COLLECTOR_PORT}
    protocol = "http"
    protocol = ${?TRACING_SCHEME}
  }
}
